// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TipoTicket {
  IMPRESORA_SOFTWARE
  IMPRESORA_HARDWARE
  INFORMATICA
  INTERNO
}

enum EstadoTicket {
  ABIERTO
  ASIGNADA
  PENDIENTE
  PENDIENTE_CLIENTE
  PENDIENTE_PROVEEDOR
  EN_TRANSITO
  PENDIENTE_RMA
  EN_PROCESO
}

enum OrigenTicket {
  TELEFONO
  WEB
  MANUAL
}

enum UrgenciaTicket {
  NORMAL
  MEDIA
  ALTA
  EXTREMA
}

enum Role {
  ADMIN
  GESTOR
  TECNICO
  LECTOR
}

enum TipoAccion {
  DIAGNOSTICO
  REPARACION
  SUSTITUCION
  CONFIGURACION
  LLAMADA
  REVISION
}

enum EstadoTarea {
  PENDIENTE
  EN_CURSO
  FINALIZADA
  CANCELADA
}

enum ResultadoTarea {
  RESUELTO
  NO_RESUELTO
  PENDIENTE_PIEZAS
  ESCALADO
}

enum UbicacionTarea {
  REMOTA
  CLIENTE
  TALLER
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  email        String?   @unique
  displayName  String
  passwordHash String
  isActive     Boolean   @default(true)
  roles        Role[]    // Postgres enum array
  technician   Technician?
  intervenciones Intervencion[] @relation("IntervencionesDeTecnico")
  auditLogs    AuditLog[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Client {
  codigoCliente   String   @id
  razonSocial     String
  telefono        String?
  email           String?
  domicilio       String?
  departamento    String?
  edificio        String?
  contacto        String?
  contracts       Contract[]
  tickets         Ticket[]
  @@index([razonSocial])
}

model Technician {
  id        String  @id @default(cuid())
  nombre    String
  email     String?
  telefono  String?
  perfil    String?
  tickets   Ticket[]
  userId    String?  @unique
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@index([nombre])
}

model Contract {
  id           String   @id @default(cuid())
  codigoCliente String
  client       Client   @relation(fields: [codigoCliente], references: [codigoCliente], onDelete: Cascade)
  fechaInicio  DateTime
  fechaFin     DateTime?
  tipoContrato String
  numeroSerie  String
  marca        String?
  modelo       String?
  ubicacion    String?
  copiasNegro  Int?
  copiasColor  Int?
  tickets      Ticket[]
  @@index([codigoCliente, numeroSerie])
}

model Ticket {
  numeroTicket            String   @id
  fechaCreacion           DateTime @default(now())
  usuarioCreacion         String
  tipoTicket              TipoTicket
  categoria               String?
  subCategoria            String?
  subCategoria2           String?
  codigoCliente           String
  client                  Client   @relation(fields: [codigoCliente], references: [codigoCliente], onDelete: Restrict)
  razonSocial             String
  contacto                String?
  telefono                String?
  email                   String?
  contratoId              String?
  contrato                Contract? @relation(fields: [contratoId], references: [id])
  numeroSerie             String?
  estadoTicket            EstadoTicket @default(ABIERTO)
  origen                  OrigenTicket
  urgencia                UrgenciaTicket @default(NORMAL)
  detalle                 String?
  fechaUltimaActualizacion DateTime? 
  fechaCierre             DateTime?
  technicianId            String?
  technician              Technician? @relation(fields: [technicianId], references: [id])
  intervenciones          Intervencion[]
  @@index([codigoCliente, estadoTicket, urgencia, technicianId])
  @@index([fechaCreacion])
}

model Intervencion {
  id                    String   @id @default(cuid())
  numeroTicket          String
  ticket                Ticket   @relation(fields: [numeroTicket], references: [numeroTicket], onDelete: Cascade)
  fechaHoraProgramada   DateTime?
  fechaHoraInicio       DateTime?
  fechaHoraFin          DateTime?
  tecnicoAsignadoId     String
  tecnico               User     @relation("IntervencionesDeTecnico", fields: [tecnicoAsignadoId], references: [id])
  tipoAccion            TipoAccion
  descripcion           String?
  estadoTarea           EstadoTarea @default(PENDIENTE)
  duracionMinutos       Int?
  costeEstimado         Decimal? @db.Decimal(12,2)
  resultado             ResultadoTarea?
  firmaClienteUrl       String?
  ubicacion             UbicacionTarea?
  adjuntosJson          Json?
  materiales            IntervencionMaterial[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@index([numeroTicket])
  @@index([tecnicoAsignadoId])
  @@index([estadoTarea])
  @@index([fechaHoraInicio])
  @@index([tecnicoAsignadoId, estadoTarea])
  @@index([tecnicoAsignadoId, fechaHoraInicio])
  @@index([fechaHoraInicio, estadoTarea])
  @@index([numeroTicket, estadoTarea])
}

model IntervencionMaterial {
  id                  String      @id @default(cuid())
  intervencionId      String
  intervencion        Intervencion @relation(fields: [intervencionId], references: [id], onDelete: Cascade)
  codigoArticulo      String
  unidadesUtilizadas  Decimal     @db.Decimal(18,6)
  precio              Decimal     @db.Decimal(12,2)
  descuento           Decimal     @db.Decimal(5,2) // porcentaje 0-100
  importeTotal        Decimal     @db.Decimal(12,2) // calculado = unidades * precio * (1 - desc/100)
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt

  @@index([intervencionId])
  @@index([codigoArticulo])
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  entity    String   // tabla afectada (ej: "Intervencion", "IntervencionMaterial")
  entityId  String   // ID del registro afectado
  action    String   // "CREATE", "UPDATE", "DELETE"
  before    Json?    // estado anterior (null para CREATE)
  after     Json?    // estado nuevo (null para DELETE)
  ip        String?
  userAgent String?
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([entity, entityId])
  @@index([createdAt])
}
